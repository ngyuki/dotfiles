#!/bin/bash

set -eu

: ${TOGGL_PROFILE_FILE:?}

source "$TOGGL_PROFILE_FILE"

: ${TOGGL_APIKEY:?}
: ${TOGGL_USERAGENT:?}
: ${TOGGL_WORKSPACE:?}

###

curl_toggl() {
  curl -sSL -H "Content-Type: application/json" -u "$TOGGL_APIKEY":api_token "$@"
}

toggl_get() {
  start="$(date -d "$1" +%Y-%m-%d)"
  end="$(date -d "$2" +%Y-%m-%d)"

  json="$(jq --arg start "$start" --arg end "$end" -n '{
      "start_date":$start,
      "end_date":$end,
      "grouping": "projects",
      "subgrouping": "time_entries",
      "include_time_entry_ids": true,
  }')"
  curl_toggl -X POST https://api.track.toggl.com/reports/api/v3/workspace/$TOGGL_WORKSPACE/summary/time_entries \
  -H "Content-Type: application/json" -d "$json" \
  | jq '[.groups[].sub_groups[]] | sort_by(.title)[] | [(.ids|@csv),.seconds,.title] | @tsv' -r | cat -n
}

toggl_bulk() {
  time_entry_ids=$1
  description=$2
  json="$(jq -n -c --arg description "$description" '[{"op":"replace","path":"/description","value":$description}]')"
  curl_toggl -X PATCH "https://api.track.toggl.com/api/v9/workspaces/$TOGGL_WORKSPACE/time_entries/$time_entry_ids" -d "$json"
}

yesno() {
  prompt="$(printf "\e[1;33mReally (yes/no): \e[m")"
  while read -p "$prompt" yn; do
    case $yn in
      [Yy]*) return 0;;
      [Nn]*) return 1;;
    esac
  done
  return 1
}

main() {
  start=${1:-1 month ago}
  end=${2:-now}

  tmp="$(mktemp -t toggl-bulk-XXXXXXXX.txt)"
  trap 'rm -f -- "$tmp"' EXIT

  toggl_get "$start" "$end" > "$tmp"

  declare -A ids=()
  declare -A orig=()
  declare -A next=()

  while IFS=$'\t' read -r no ids seconds title; do
    no=${no// /}
    ids[$no]=$ids
    orig[$no]=$title
  done < "$tmp"

  cut -d$'\t' -f1,3-4 < "$tmp" | column -t -s $'\t' | sponge "$tmp"
  code -w "$tmp"

  while read -r no seconds title; do
    no=${no// /}
    if [[ "$no" =~ ^[0-9]+$ ]]; then
      if [ "${orig[$no]}" != "$title" ]; then
        next[$no]=$title
      fi
    fi
  done < "$tmp"

  if [ "${#next[@]}" -eq 0 ]; then
    exit
  fi

  echo
  for no in "${!next[@]}"; do
    printf '\t%s\t->\t%s \e[1;30m(%s)\e[m\n' "${orig[$no]}" "${next[$no]}" "${ids[$no]}"
  done | column -t -s $'\t'
  echo

  yesno

  echo
  for no in "${!next[@]}"; do
    toggl_bulk "${ids[$no]}" "${next[$no]}" | awk 1
  done
}

main "$@"
